{
  "_args": [
    [
      {
        "raw": "native-promisify-if-present@^1.0.1",
        "scope": null,
        "escapedName": "native-promisify-if-present",
        "name": "native-promisify-if-present",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "F:\\vue-music\\vue-music\\node_modules\\create-keyframe-animation"
    ]
  ],
  "_cnpm_publish_time": 1437162743122,
  "_from": "native-promisify-if-present@^1.0.1",
  "_hasShrinkwrap": false,
  "_id": "native-promisify-if-present@1.0.1",
  "_location": "/native-promisify-if-present",
  "_nodeVersion": "0.12.4",
  "_npmUser": {
    "name": "henrikjoreteg",
    "email": "henrik@andyet.net"
  },
  "_npmVersion": "2.12.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "native-promisify-if-present@^1.0.1",
    "scope": null,
    "escapedName": "native-promisify-if-present",
    "name": "native-promisify-if-present",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/create-keyframe-animation"
  ],
  "_resolved": "http://r.cnpmjs.org/native-promisify-if-present/download/native-promisify-if-present-1.0.1.tgz",
  "_shasum": "78c79b0dc39c5a94b3ad0f4677d64b7170f482e2",
  "_shrinkwrap": null,
  "_spec": "native-promisify-if-present@^1.0.1",
  "_where": "F:\\vue-music\\vue-music\\node_modules\\create-keyframe-animation",
  "author": {
    "name": "Henrik Joreteg",
    "email": "henrik@andyet.net"
  },
  "bugs": {
    "url": "https://github.com/henrikjoreteg/native-promisify-if-present/issues"
  },
  "dependencies": {
    "is-function": "^1.0.1"
  },
  "description": "Return a promise from a callback-as-last-argument function using native a Promise, but only if native Promises exist.",
  "devDependencies": {
    "standard": "^4.5.2"
  },
  "directories": {},
  "dist": {
    "shasum": "78c79b0dc39c5a94b3ad0f4677d64b7170f482e2",
    "size": 1616,
    "noattachment": false,
    "tarball": "http://r.cnpmjs.org/native-promisify-if-present/download/native-promisify-if-present-1.0.1.tgz"
  },
  "gitHead": "de7af022548078773abca135b62d7207d44be79b",
  "homepage": "https://github.com/henrikjoreteg/native-promisify-if-present#readme",
  "keywords": [
    "callback",
    "native",
    "promise",
    "promisify"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "henrikjoreteg",
      "email": "henrik@andyet.net"
    }
  ],
  "name": "native-promisify-if-present",
  "optionalDependencies": {},
  "publish_time": 1437162743122,
  "readme": "# native-promisify-if-present\n\nConditionally returns a promise from a callback-as-last-argument function using a native Promise, but only if native Promises exist, and you didn't pass in a callback.\n\nOtherwise your callback function works as usual.\n\nWhy another promisify module?! Sorry. Here's why:\n\n1. I'm writing a library and want to support both callbacks and promises\n2. I don't want to pick what Promise library you use if you're polyfilling it\n3. Since Promises are [part of the web](http://caniuse.com/#feat=promises) now, you should be polyfilling them and using native if present anyway, so this will look for Promises on `window` or `global` if defined.\n4. I still don't want it to cause JS errors if you were using the libarary I was building, needing to support IE, and you just want the callback API (even IE 11 doesn't have native promises).\n\n## install\n\n```\nnpm install native-promisify-if-present\n```\n\n## example\n\n```javascript\nvar promisify = require('native-promisify-if-present');\n\n// write your callback function as usual\nfunction someFunctionThatTakesCallback(name, callback) {\n\t// if we choose to do this it won't\n\t// blow up even if there's no native Promises\n\t// and no callback was passed\n\tif (!callback) {\n\t\tcallback = function () {}\n\t}\n\n\t// just error-first your callbacks as usual\n\tif (somethingWentWrong) {\n\t\tcallback(new Error('oh crap'))\n\t} else {\n\t\t// error is `null` when successful\n\t\tcallback(null, 'all is well')\t\n\t}\n}\n\n// call promisify to support both mechanisms\nmodule.exports = promisify(someFunctionThatTakesCallback)\n```\n\n## credits\n\nIf you like this follow [@HenrikJoreteg](http://twitter.com/henrikjoreteg) on twitter.\n\n## license\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/henrikjoreteg/native-promisify-if-present.git"
  },
  "scripts": {
    "prepublish": "standard"
  },
  "version": "1.0.1"
}
